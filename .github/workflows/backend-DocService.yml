name: Backend - Document Serive API

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'university-student-service/backend/DocService/**'

jobs:
  deploy-backend:
    runs-on: windows-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Repository
      uses: actions/checkout@v3

    # Step 2: Set up .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.x'

    - name: Restore NuGet packages
      run: dotnet restore university-student-service/backend/DocService/DocService.csproj

    - name: Replace connection string in appsettings.json
      run: |
        $configPath = "university-student-service/backend/DocService/appsettings.json"
        (Get-Content $configPath) -replace '__DB_CONNECTION_STRING__', '${{ secrets.DB_CONNECTION_STRING }}' | Set-Content $configPath
      shell: pwsh
      
    # Step 3: Publish and Zip the .NET Application
    - name: Publish and Zip Application
      run: |
        dotnet publish university-student-service/backend/DocService/DocService.csproj -c Release -o ./published
          
        Compress-Archive -Path ./published/* -DestinationPath ./backendDoc.zip

    # Step 4: Upload the Zip File to S3
    - name: Upload to S3
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        AWS_REGION: ap-southeast-2 # Adjust the region as needed
      run: |
        aws s3 cp ./backendDoc.zip s3://uss-storage-bucket/published/backendDoc.zip

    # Step 5: Deploy to Windows Server 2019 EC2 via WinRM
    - name: Deploy via WinRM
      run: |
        $ErrorActionPreference = "Stop"
        Set-Item -Path WSMan:\localhost\Client\AllowUnencrypted -Value $true
        # Add EC2 host to TrustedHosts
        Set-Item WSMan:\localhost\Client\TrustedHosts -Value "${{ secrets.EC2_HOST }}" -Force
        $securePassword = ConvertTo-SecureString "${{ secrets.EC2_PASSWORD }}" -AsPlainText -Force
        $credential = New-Object System.Management.Automation.PSCredential("${{ secrets.EC2_USERNAME }}", $securePassword)
        $session = New-PSSession -ComputerName "${{ secrets.EC2_HOST }}" -Credential $credential -Port 5985 -Authentication Basic
        Invoke-Command -Session $session -ScriptBlock {
          
          # Kill the app
            Get-CimInstance Win32_Process | Where-Object { $_.CommandLine -like '*DocService.dll*'} | ForEach-Object {
                Stop-Process -Id $_.ProcessId -Force
            }
            
          # Clean up existing files
          Remove-Item -Recurse -Force C:\app\appDoc\* -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force C:\temp\backendDoc.zip -ErrorAction SilentlyContinue

          # Download the backend.zip from S3
          Invoke-WebRequest -Uri "https://uss-storage-bucket.s3.ap-southeast-2.amazonaws.com/published/backendDoc.zip" -OutFile "C:\temp\backendDoc.zip"
          # Extract the zip file
          Expand-Archive -Path "C:\temp\backendDoc.zip" -DestinationPath "C:\app\appDoc" -Force
          
          # Start the application
          # Start-Process "dotnet" `
          #   -ArgumentList "DocService.dll --urls http://0.0.0.0:5002" `
          #   -WorkingDirectory "C:\app\appDoc\" `
          #   -RedirectStandardOutput "C:\logs\doc_out.log" `
          #   -RedirectStandardError "C:\logs\doc_err.log" 
        }
        Remove-PSSession -Session $session
